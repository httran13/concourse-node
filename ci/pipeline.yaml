---
resource_types:
  - name: npm-cache
    type: docker-image
    source: {repository: ymedlop/npm-cache-resource, tag: "8"}
  - name: sonar-runner
    type: docker-image
    source: {repository: cathive/concourse-sonarqube-resource, tag: "0.8.1" }
resources:
  - name: code-analysis
    type: sonar-runner
    source:
      host_url: "https://sonarcloud.io/"
#      __debug: true
      login: ((sonar-token))
      organization: httran13-github
  - name: git-master
    type: git
    source:
      branch: master
      uri: https://httran13:((github-token))@github.com/httran13/concourse-node.git
  - name: git-dev
    type: git
    source: &repo-source
      branch: dev
      uri: https://httran13:((github-token))@github.com/httran13/concourse-node.git
#  - name: fabric-api-newfeature
#    type: git
#    source: &repo-souce
#      branch: feature/new
#      uri: https://httran13:((github-token))@github.com/httran13/concourse-node.git
  - name: npm-repo-cache
    type: npm-cache
    source:
      yarn-support: true
      <<: *repo-source
      paths:
        - package.json
jobs:
  - name: build
    plan:
      - get: git-dev
        trigger: true
      - get: npm-repo-cache
  - name: test
    serial: true
    plan:
      - get: git-dev
        trigger: true
        passed: [build]
      - get: npm-repo-cache
        passed: [build]
      - task: npm-install
        config:
          platform: linux
          image_resource:
            type: docker-image #TODO env should reflect what is built by docker image
            source: {repository: yeasy/hyperledger-fabric-sdk-node, tag: "latest"}
          inputs:
            - name: git-dev
              path: /node-concourse
            - name: npm-repo-cache
              path: /cache
          outputs:
            - name: sonarqube-analysis-input
#          params: #TODO modify env
#            ENVIRONMENT: local
#            PORT: 3000
#            FABRIC_LOCAL_CP: "cp.json"
#            FABRIC_DOCKER_CP: "cp-docker.json"
          run:
            path: sh
            args:
              - -exc
              - |
                mv cache/node_modules node-concourse
                cd node-concourse
                npm rebuild
                npm test
                perl -i -pe's|SF:.*/node-concourse/|SF:/tmp/build/put/sonarqube-analysis-input/|g' coverage/lcov.info
                cp -r . ../sonarqube-analysis-input
      - aggregate:
          - put: code-analysis
            params:
              project_path: sonarqube-analysis-input
              project_key: "github.com:httran13:node-concourse-demo"
              sources: ["src", "app.js"]
              scanner_type: auto
              project_name: node-concourse-demo
              project_description: "Example node demo"
              project_version: 0.0.1
              branch_name: dev
              branch_target: master
              tests: ["tests"]
              additional_properties:
                sonar.language: js
                sonar.scm.provider: git
                sonar.javascript.lcov.reportPaths: coverage/lcov.info
  #          - put: artifact
  ##            params:
  ##              file: huy/put/test.zip

  - name: qualitygate
    plan:
      - aggregate:
          - get: code-analysis
            passed:
              - test
            trigger: true

      - task: check-sonarqube-quality-gate
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cathive/concourse-sonarqube-qualitygate-task
              tag: latest
          inputs:
            - name: code-analysis
          outputs:
            - name: master-branch
          run:
            path: /sonarqube-qualitygate-check
            dir: code-analysis
  - name: Merge-to-master
    plan:
      - get: git-dev
        passed: [test]
      - get: code-analysis
        passed: [qualitygate]
      - task: commit-and-push
        config:
          inputs:
            - name: git-dev
          outputs:
            - name: git-master-branch
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: node
              tag: 8.0.0
          run:
            path: bash
            args:
              - -exc
              - git clone git-dev git-master-branch
              - cd git-master-branch
              - echo $(date) > huy_add.txt
              - git add .
              - git commit -m "adding from pipeline"
      - put: git-master
        params:
          repository: git-master-branch
